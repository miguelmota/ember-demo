{
  "name": "rutil",
  "version": "0.0.5",
  "description": "Random utilities",
  "main": "rutil.js",
  "dependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-uglify": "~0.3.2",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-jasmine": "~0.6.1"
  },
  "devDependencies": {
    "lodash": "~2.4.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/miguelmota/rutil.git"
  },
  "author": {
    "name": "Miguel Mota"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/miguelmota/rutil/issues"
  },
  "readme": "# rutil v0.0.4\n\nRandom utilities\n\n# Install\n\nAvailable via [Bower](http://bower.io/)\n\n```bash\nbower install rutil\n```\n\nAvailable via [npm](https://www.npmjs.org/)\n\n```bash\nnpm install rutil\n```\n\n# Utilities\n\n### isObject(obj])\n\n```javascript\nrutil.isObject({}); // true\nrutil.isObject([]); // false\n```\n\n### isArray(arr)\n\n```javascript\nrutil.isArray([]); // true\n```\n\n### merge(obj1, obj2)\n\n```javascript\nvar obj1 = {\n\tfoo: 'bar',\n\tbaz: 1234\n};\n\nvar obj2 = {\n\tfoo: 'qux'\n};\n\nvar obj3 = rutil.merge(obj1, obj2);\n\nobj3 // {foo: \"qux\", baz: 1234}\n```\n\n### serialize(obj)\n\n```javascript\nvar obj = {\n\tuid: 123,\n\tt: [\n\t\t'foo',\n\t\t'bar'\n\t],\n\to: {baz: 'qux'},\n\tq: 'foo bar'\n};\n\nrutil.serialize(obj); // uid=123&t=foo&t=bar&o%5Bbaz%5D=qux&q=foo%20bar\n```\n\n### shuffle(arr)\n\n```javascript\nvar arr = ['a', 'b', 'c', 'd', 'e', 'f'];\n\nvar shuffled = rutil.shuffle(arr);\n\nshuffled // ['c', 'e', 'b', 'd', 'f', 'a']\n```\n\n### getParams([url])\n\n```javascript\n// current url: http://example.com/?foo=bar&baz=qux\n\nrutil.getParams(); // {foo: \"bar\", baz: \"qux\"}\n```\n\n```javascript\nvar url = 'http://example.com/?foo=bar&baz=qux';\n\nrutil.getParms(url) // {foo: \"bar\", baz: \"qux\"}\n```\n\n### setQueryStringParam(uri, key, val)\n\n```javascript\nvar uri = 'http://example.com?foo=bar';\n\nuri = rutil.setQueryStringParam(uri, 'foo', 'qux');\n\nuri // http://example.com?foo=qux\n```\n\n### generateUUID()\n\n```javascript\nrutil.generateUUID(); // 049128ed-b16c-4689-90d2-e910860d2797\n```\n\n### generateRandomString([length], [str])\n\n```javascript\nrutil.generateRandomString(); // Ne46OxeEbWeDdFSDmwbOq4kfGkoKlMSh\n\nrutil.generateRandomString(16); // mOPJBXXc9MR7nQf8\n\nrutil.generateRandomString(6, '0123456789'); // 388048\n```\n\n### random(min, max)\n\n```javascript\nrutil.random(0,9); // 6\n```\n\n### hexToRgb(hex)\n\n```javascript\nvar hex = '#0077aa';\n\nvar rgb = rutil.hexToRgb(hex); // {\"r\":0,\"g\":119,\"b\":170}\n\nrgb.g // 119\n```\n\n### getDatesInbetween(dateObj1, dateObj2)\n\n```javascript\nvar from = new Date(2013,10,22);\nvar until = new Date(2013,11,25);\n\nvar dates = rutil.getDatesInbetween(from, until);\n\ndates.forEach(function(date) {\n  date // obj: Fri Nov 22 2013 00:00:00 GMT-0800 (PST)\n});\n```\n\n### parseHashtag(str, url)\n\n```javascript\nvar string = '#foo #bar';\n\nvar linkifiedString = rutil.parseHashtag(string, 'http://twitter.com/search?q={{tag}}');\n\nlinkifiedString // <a href=\"http://twitter.com/search?q=%23foo\">#foo</a> <a href=\"http://twitter.com/search?q=%23bar\">#bar</a>\n```\n\n### parseUsername(str, url)\n\n```javascript\nvar string = '@foo @bar';\n\nvar linkifiedString = rutil.parseUsername(string, 'http://twitter.com/{{username}}');\n\nlinkifiedString // <a href=\"http://twitter.com/foo\">@foo</a> <a href=\"http://twitter.com/bar\">@bar</a>\n```\n\n### parseUrl(str)\n\n```javascript\nvar string = 'http://example.com/ http://github.com/';\n\nvar linkifiedString = rutil.parseUrl(string);\n\nlinkifiedString // <a href=\"http://example.com/\">http://example.com/</a> <a href=\"http://github.com/\">http://github.com/</a>\n```\n\n### stripTags(str)\n\n```javascript\nvar htmlString = '<p><strong>foo</strong></p>';\n\nvar text = rutil.stripTags(htmlString);\n\ntext // foo\n```\n\n### formatPhone(num)\n\n```javascript\nvar phone = 1234567890;\n\nvar formattedPhone = rutil.formatPhone(phone);\n\nformattedPhone // (123) 456-7890\n```\n\n### isValidEmail(str)\n\n```javascript\nvar email = 'foo.bar-5@qux.com';\n\nrutil.isValidEmail(email); // true\n```\n\n### isValidZip(num)\n\n```javascript\nvar zip = 12345;\n\nrutil.isValidZip(zip); // true\n```\n\n### isValidName(str)\n\n```javascript\nrutil.isValidName('Foo'); // true\nrutil.isValidName('Foo*'); // false\nrutil.isValidName('Foo1'); // false\n```\n\n### isValidUsername(str)\n\n```javascript\nrutil.isValidUsername('foo') // true\nrutil.isValidUsername('foo_bar1') // true\nrutil.isValidUsername('foo-bar') // false\n```\n\n```javascript\nvar zip = '12345-2453';\n\nrutil.isValidZip(zip); // true\n```\n\n### isValidMinAge(dateObj, num)\n\n```javascript\nvar birthDate = new Date(1998, 02, 20);\n\nrutil.isValidMinAge(birthDate, 18); // true\n```\n\n### addCommas(num)\n\n```javascript\nvar number = 1234567890.1234;\n\nvar numberWithCommas = rutil.addCommas(number);\n\nnumberWithCommas // 1,234,567,890.1234\n```\n\n### repeat(str, [times])\n\n```javascript\nrutil.repeat('foo'); // foofoo\nrutil.repeat('foo', 5); // foofoofoofoofoo\n```\n\n### pad(num)\n\n```javascript\nrutil.pad(10); // 10\nrutil.pad(9); // 9\n```\n\n### capitalize(str, [lowercase])\n\n```javascript\nrutil.capitalize('foo'); // Foo\nrutil.capitalize('fooBarQux'); // 'FooBarQux'\nrutil.capitalize('fooBarQux', true); // 'Foobarqux'\n```\n\n### isMobileDevice([device])\n\n```javascript\nrutil.isMobileDevice(); // bool\n\nrutil.isMobileDevice('ios'); // bool\n```\n\n```\noptions: 'iphone', 'ipad', 'ios', 'ios7', 'android', 'blackberry', 'ie', 'opera', 'webos'\n```\n\n### createPixel(url)\n\n```javascript\nvar url = 'http://example.com/pixel-tracker?id=1234567890';\n\nrutil.createPixel(url); // appends image tag to body\n```\n\n### toBool(str)\n\n```javascript\nvar string = 'true';\n\nrutil.toBool(string); // true\n```\n\n```\noptions: 'true', 'yes', 'on', '1'\n```\n\n### sleep(num)\n\n```javascript\nconsole.log('start sleep');\nrutil.sleep(50000);\nconsole.log('This will show after 5 seconds');\n```\n\n# Extend _\n\nTo extend the `_` when using libraries such as [underscore](http://underscorejs.org/) or [lodash](http://lodash.com/), pass in `rutil._()` to the underscore mixin function. Rutil functions will not override underscore functions if they already exist, unless you pass `rutil._(true)`\n\n```\n_.mixin(rutil._()); // extend underscore\n\n_.isValidEmail('foo@bar.com'); // use rutil function\n```\n\n# Test\n\nUsing [Jasmine](http://pivotal.github.io/jasmine/) for testing\n\n```\ngrunt test\n```\n\n# Build\n\n```\ngrunt build\n```\n\n# License\n\nReleased under the MIT License.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/miguelmota/rutil",
  "_id": "rutil@0.0.5",
  "_from": "rutil@"
}
